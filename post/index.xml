<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on 苦X工程师 </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://kevensya.github.io/post/</link>
    <language>zh-cn</language>
    <author>kevenxia</author>
    
    <updated>Thu, 23 Jul 2015 14:26:31 JST</updated>
    
    <item>
      <title>greyshade主题的disqus安装配置</title>
      <link>http://kevensya.github.io/post/disqus-config/</link>
      <pubDate>Thu, 23 Jul 2015 14:26:31 JST</pubDate>
      <author>kevenxia</author>
      <guid>http://kevensya.github.io/post/disqus-config/</guid>
      <description>

&lt;h4 id=&#34;disqus账号注册:ada11f2a84560c6d1d5135f0c6fbc69f&#34;&gt;disqus账号注册&lt;/h4&gt;

&lt;p&gt;要想使用disqus作为自己的评论系统，首先需要一个disqus账号，可以上&lt;a href=&#34;https://disqus.com/&#34;&gt;disqus&lt;/a&gt;注册一个，注册的步骤就不细说了。&lt;/p&gt;

&lt;h4 id=&#34;登记你的站点:ada11f2a84560c6d1d5135f0c6fbc69f&#34;&gt;登记你的站点&lt;/h4&gt;

&lt;p&gt;这部比较重要，如果没有这一步的话，就没有下面你使用的disqus_shortname了，我在刚开始就是不知道这一步，导致出现&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We were unable to load Disqus&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;的错误,出现这个错误的同时也会给出一个&lt;a href=&#34;https://help.disqus.com/customer/portal/articles/472007-i-m-receiving-the-message-%22we-were-unable-to-load-disqus-%22&#34;&gt;trouble shooting的链接&lt;/a&gt;，我就只按照这个链接的指示找到问题所在的。&lt;/p&gt;

&lt;p&gt;登记站点很简单，从&lt;a href=&#34;http://disqus.com/admin&#34;&gt;http://disqus.com/admin&lt;/a&gt;可以登记你的站点，如果以前没有添加过站点，那么第一次打开的是这个界面&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://disqus-cloudfront.s3.amazonaws.com/docs/forum-registration-page.png&#34; alt=&#34;登记站点&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如果以前登记过站点，这次只需要Add new site就行了&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kevensya.github.io/images/screenshot/Moderate-add-new-site-Disqus.png&#34; alt=&#34;Add new site&#34; /&gt;&lt;/p&gt;

&lt;p&gt;上面的disqus url前面需要填写的部分将会成为你的disqus_shortname，需要在下面用到。&lt;/p&gt;

&lt;h4 id=&#34;hugo博客生成系统配置:ada11f2a84560c6d1d5135f0c6fbc69f&#34;&gt;Hugo博客生成系统配置&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;以下的配置都是在greyshade主题下地配置步骤，不同主题可能配置方法会稍有不同&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在需要开放评论的页面中加入comments = true&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
Categories = [&amp;quot;Hugo&amp;quot;]
Description = &amp;quot;Hugo博客相关&amp;quot;
Tags = [&amp;quot;Hugo&amp;quot;]
date = &amp;quot;2015-07-19T20:04:30+09:00&amp;quot;
menu = &amp;quot;main&amp;quot;
title = &amp;quot;利用Hugo搭建博客系统&amp;quot;
comments = true
+++
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;然后配置config.toml，在params中加入下面配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disqus_short_name = &amp;quot;上面在disqus登记站点时的disqus_shortname&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;博客网页更新:ada11f2a84560c6d1d5135f0c6fbc69f&#34;&gt;博客网页更新&lt;/h4&gt;

&lt;p&gt;做好以上的配置之后，就可以重新生成博客静态网页，并更新到站点上去。如果使用的是github，步骤可以参照我上一篇博客&lt;a href=&#34;http://kevensya.github.io/post/hugo-install&#34;&gt;利用Hugo搭建博客系统&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然，也可以在本地利用hugo server -w进行预览。&lt;/p&gt;

&lt;p&gt;至此，disgus配置的步骤也就完成了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>利用Hugo搭建博客系统</title>
      <link>http://kevensya.github.io/post/hugo-install/</link>
      <pubDate>Sun, 19 Jul 2015 20:04:30 JST</pubDate>
      <author>kevenxia</author>
      <guid>http://kevensya.github.io/post/hugo-install/</guid>
      <description>

&lt;h4 id=&#34;选择的两种静态网页博客系统比较:a21e4d43a2a98a5640b183c3e7675c3a&#34;&gt;选择的两种静态网页博客系统比较&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Octopress&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Octopress 是一款基于Jekyll 的静态站点生成系统,使用ruby编写的，使用这个博客系统需要对ruby语言有一定的掌握。因为自己也学习过ruby，而且现在有个朋友正在使用octopress 2.x作为他的博客系统，所以这次的首选是octopress，但是安装过程稍显复杂，目前octopress 3.x版本的安装相关说明基本上没有，加上很多人抱怨octopress的在post数量超过一定数量后，每次生成页面的速度很慢，综合考虑后放弃octopress。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Hugo&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;利用Go语言编写的静态站点生成系统，从速度上来说Hugo完胜，网上对octopress的速度很多人不满，150个post的情况下，octopress生成网页的速度大概需要40秒，而hugo不到一秒就完成页面的生成了，因此也有不少人从octopress换到Hugo，与其到时候更换，还不如从刚开始就选择Hugo，所以最终决定使用Hogo。目前来说只有一个post的情况下，速度方面有多少优势目前还不得知，但是目前来说，速度，发布方式各个方面还是比较满意。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;hugo的安装:a21e4d43a2a98a5640b183c3e7675c3a&#34;&gt;Hugo的安装&lt;/h4&gt;

&lt;p&gt;安装环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;OS: OS X Yosemite 10.10.4
Ruby: ruby 2.2.2p95
Homebrew: 0.9.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为已经安装过Homebrew了，所以最简单的办法就是利用Homebrew安装&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;如果未安装过Homebrew，可以按照&lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew官网&lt;/a&gt;的指示进行安装(注意：安装Homebrew之前需要安装&lt;a href=&#34;https://www.ruby-lang.org/&#34;&gt;Ruby&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;brew install Hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果没有安装过Homebrew，不想折腾安装Homebrew，可以直接从&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;下载最新的binary版本。&lt;/p&gt;

&lt;p&gt;安装后，执行下面的命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果命令能够正确执行并输出安装的hugo版本表示安装成功，接着就可以利用Hugo生成site。&lt;/p&gt;

&lt;h4 id=&#34;博客site的生成:a21e4d43a2a98a5640b183c3e7675c3a&#34;&gt;博客site的生成&lt;/h4&gt;

&lt;p&gt;生成site&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site &amp;lt;path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此命令的目的在path生成site的scaffolding，生成的的文件结构如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|- archetypes
|- content
|- data
|- layouts
|- static
|- config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入path目录，接下来，安装主题(themes)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/spf13/hugoThemes themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个将从github下载所有的Hugo主题，大小大概有230M左右，下载完成需要等待一段时间。
themes下载完后，修改config.toml的配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseUrl= &amp;quot;http://kevensya.github.io/&amp;quot; -- 发布时的博客url
languageCode = &amp;quot;zh-cn&amp;quot; -- 语言（目前还没有发现有什么特殊的作用）
title = &amp;quot;苦X工程师&amp;quot; -- 博客标题
theme = &amp;quot;greyshade&amp;quot; -- 主题名
Paginate = 10 -- 分页大小

[author]
name = &amp;quot;kevenxia&amp;quot;
email = &amp;quot;xxxx@mail.com&amp;quot;

[params]
  githubName = &amp;quot;kevensya&amp;quot;
  description = &amp;quot;Java,VC++,C++,ObjC,C#使用中&amp;quot; -- 博客的描述
  disqusShortname = &amp;quot;crazykeven&amp;quot;
  github_user = &amp;quot;kevensya&amp;quot;
  excerpt_link = &amp;quot;[阅读全文]&amp;quot; -- 博客首页显示博客概要时代替Read More的文本
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每个主题的配置方法都稍微有些不一样，需要研究主题的layout以及官方关于&lt;a href=&#34;http://gohugo.io/templates/overview/&#34;&gt;Template的说明&lt;/a&gt;进行配置，我这里使用的是&lt;a href=&#34;https://github.com/cxfksword/greyshade&#34;&gt;greyshade主题&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;配置好后，可以生成一个post测试一下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/welcome.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入content/目录，多了一个post目录，post目录下多了一个welcome.md文件。&lt;/p&gt;

&lt;p&gt;启动本地预览服务器&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里加上了-w option，这样编写的博客或者layout有变化后能实时反映到web页面上，不用每次重新启动服务器（但是修改了config.toml文件就必须重新启动服务器后修改才能得到反映）。&lt;/p&gt;

&lt;p&gt;在浏览器输入 &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt; 就可以看到博客的首页了,首页上显示了刚才生成的welcome的博客。&lt;/p&gt;

&lt;h4 id=&#34;发布到github:a21e4d43a2a98a5640b183c3e7675c3a&#34;&gt;发布到Github&lt;/h4&gt;

&lt;p&gt;每个github账号可以发布一个个人页面的站点（Github pages），我就利用这次这个功能发布hugo生成的静态页面。首先在github建立一个repository，这个repository的名字必须是下面两种格式。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;github账户名.github.com
github账户名.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://kevensya.github.io/images/screenshot/Create a New Repository.png&#34; alt=&#34;创建repository&#34; /&gt;&lt;/p&gt;

&lt;p&gt;创建完repository后，暂时回到本地进行操作&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo -t greyshade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;利用主题greyshade生成静态html页面，所有的静态页面都在public/中。&lt;/p&gt;

&lt;p&gt;进入public目录，创建本地git仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将.DS_Store文件添加到忽略列表中（.DS_Store是OSX的系统文件）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;.DS_Store&amp;quot; &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行下面的命令将生成的页面添加到git仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add -A
git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将github仓库添加到本地仓库的远程服务器中&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote add origin https://github.com/kevensya/kevensya.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将本地仓库推送到github&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就能通过 kevensya.github.io 来访问博客了，如果博客有更新，可以利用下面的命令再次push到github。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo -t greyshade
git add -A
git commit -m &amp;quot;Update public files&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参考文档:a21e4d43a2a98a5640b183c3e7675c3a&#34;&gt;参考文档&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Hugo官方文档：&lt;a href=&#34;http://gohugo.io/overview/introduction/&#34;&gt;http://gohugo.io/overview/introduction/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hugo静态网站生成器中文教程：&lt;a href=&#34;http://nanshu.wang/post/2015-01-31/&#34;&gt;http://nanshu.wang/post/2015-01-31/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>
